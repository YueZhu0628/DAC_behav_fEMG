position="identity", outlier.shape = 8) +
scale_color_lancet()+
scale_fill_lancet(alpha = 0.5)+
stat_pvalue_manual(t_ds_group,
bracket.nudge.y = 0.1,
step.increase = 0.1,
label = plabel, hide.ns = FALSE,
tip.length = 0.01) +
labs(title = indicator, x = gb, y = indicator, fill=gb) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
}
perf_box_plot(df_Flase_Choice, "Task_RT", "ChoiceDemand")
perf_box_plot <- function(df_clean, indicator, gb){
t_ds_group <-
df_clean %>%
filter(Phase %in% c("LEARNING","TrueCHOICE","FalseCHOICE")) %>%
group_by(PID,!!sym(gb)) %>%
summarise(Perf_mean=mean(!!sym(indicator), na.rm=TRUE),.groups = "drop") %>%
mutate(PID = factor(PID),
gb = factor(!!sym(gb))) %>%
t_test(Perf_mean~!!sym(gb)) %>%
add_xy_position(x=gb) %>%
add_significance()
print(colnames(df_clean))
if("p.adj.signif" %in% colnames(t_ds_group)){
plabel = "p = {p}{p.adj.signif}"
}else{
plabel = "p = {p}{p.signif}"
}
df_clean %>%
filter(Phase %in% c("LEARNING","TrueCHOICE","FalseCHOICE")) %>%
# group_by(PID) %>%
# summarise(Trial_RT = mean(Trial_RT, na.rm=TRUE), .groups = "drop") %>%
# group_by(PID, TaskDemand) %>%
# summarise(Task_RT = mean(Task_RT, na.rm=TRUE), .groups = "drop") %>%
# mutate(PID = factor(PID)) %>%
ggplot(aes(x=!!sym(gb), y = !!sym(indicator))) +
geom_boxplot(aes(color = !!sym(gb), fill = !!sym(gb)),
position="identity", outlier.shape = 8) +
scale_color_lancet()+
scale_fill_lancet(alpha = 0.5)+
stat_pvalue_manual(t_ds_group,
bracket.nudge.y = 0.1,
step.increase = 0.1,
label = plabel, hide.ns = FALSE,
tip.length = 0.01) +
labs(title = indicator, x = gb, y = indicator, fill=gb) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
}
perf_box_plot(df_Flase_Choice, "Task_RT", "ChoiceDemand")
perf_box_plot(df_Flase_Choice, "Task_RT", "ChoiceDemand")
perf_box_plot(df_False_Choice, "Task_RT", "ChoiceDemand")
perf_box_plot <- function(df_clean, indicator, gb){
t_ds_group <-
df_clean %>%
filter(Phase %in% c("LEARNING","TrueCHOICE","FalseCHOICE")) %>%
group_by(PID,!!sym(gb)) %>%
summarise(Perf_mean=mean(!!sym(indicator), na.rm=TRUE),.groups = "drop") %>%
mutate(PID = factor(PID),
TaskDemand = factor(!!sym(gb))) %>%
t_test(Perf_mean~TaskDemand) %>%
add_xy_position(x=TaskDemand) %>%
add_significance()
if("p.adj.signif" %in% colnames(t_ds_group)){
plabel = "p = {p}{p.adj.signif}"
}else{
plabel = "p = {p}{p.signif}"
}
df_clean %>%
filter(Phase %in% c("LEARNING","TrueCHOICE","FalseCHOICE")) %>%
# group_by(PID) %>%
# summarise(Trial_RT = mean(Trial_RT, na.rm=TRUE), .groups = "drop") %>%
# group_by(PID, TaskDemand) %>%
# summarise(Task_RT = mean(Task_RT, na.rm=TRUE), .groups = "drop") %>%
# mutate(PID = factor(PID)) %>%
ggplot(aes(x=!!sym(gb), y = !!sym(indicator))) +
geom_boxplot(aes(color = !!sym(gb), fill = !!sym(gb)),
position="identity", outlier.shape = 8) +
scale_color_lancet()+
scale_fill_lancet(alpha = 0.5)+
stat_pvalue_manual(t_ds_group,
bracket.nudge.y = 0.1,
step.increase = 0.1,
label = plabel, hide.ns = FALSE,
tip.length = 0.01) +
labs(title = indicator, x = gb, y = indicator, fill=gb) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
}
perf_box_plot(df_False_Choice, "Task_RT", "ChoiceDemand")
perf_box_plot <- function(df_clean, indicator, gb){
t_ds_group <-
df_clean %>%
filter(Phase %in% c("LEARNING","TrueCHOICE","FalseCHOICE")) %>%
group_by(PID,!!sym(gb)) %>%
summarise(Perf_mean=mean(!!sym(indicator), na.rm=TRUE),.groups = "drop") %>%
mutate(PID = factor(PID),
TaskDemand = factor(!!sym(gb))) %>%
t_test(Perf_mean~TaskDemand) %>%
add_xy_position(x="TaskDemand") %>%
add_significance()
if("p.adj.signif" %in% colnames(t_ds_group)){
plabel = "p = {p}{p.adj.signif}"
}else{
plabel = "p = {p}{p.signif}"
}
df_clean %>%
filter(Phase %in% c("LEARNING","TrueCHOICE","FalseCHOICE")) %>%
# group_by(PID) %>%
# summarise(Trial_RT = mean(Trial_RT, na.rm=TRUE), .groups = "drop") %>%
# group_by(PID, TaskDemand) %>%
# summarise(Task_RT = mean(Task_RT, na.rm=TRUE), .groups = "drop") %>%
# mutate(PID = factor(PID)) %>%
ggplot(aes(x=!!sym(gb), y = !!sym(indicator))) +
geom_boxplot(aes(color = !!sym(gb), fill = !!sym(gb)),
position="identity", outlier.shape = 8) +
scale_color_lancet()+
scale_fill_lancet(alpha = 0.5)+
stat_pvalue_manual(t_ds_group,
bracket.nudge.y = 0.1,
step.increase = 0.1,
label = plabel, hide.ns = FALSE,
tip.length = 0.01) +
labs(title = indicator, x = gb, y = indicator, fill=gb) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
}
perf_box_plot(df_False_Choice, "Task_RT", "ChoiceDemand")
perf_box_plot(df_False_Choice, "Task_ACC", "ChoiceDemand")
perf_box_plot(df_False_Choice, "Task_A_measure", "ChoiceDemand")
perf_box_plot <- function(df_clean, indicator, gb){
t_ds_group <-
df_clean %>%
filter(Phase %in% c("LEARNING","TrueCHOICE","FalseCHOICE")) %>%
group_by(PID,!!sym(gb)) %>%
summarise(Perf_mean=mean(!!sym(indicator), na.rm=TRUE),.groups = "drop") %>%
mutate(PID = factor(PID),
TaskDemand = factor(!!sym(gb))) %>%
t_test(Perf_mean~TaskDemand) %>%
add_xy_position(x="TaskDemand") %>%
add_significance()
if("p.adj.signif" %in% colnames(t_ds_group)){
plabel = "p = {p}{p.adj.signif}"
}else{
plabel = "p = {p}{p.signif}"
}
df_clean %>%
filter(Phase %in% c("LEARNING","TrueCHOICE","FalseCHOICE")) %>%
# group_by(PID) %>%
# summarise(Trial_RT = mean(Trial_RT, na.rm=TRUE), .groups = "drop") %>%
# group_by(PID, TaskDemand) %>%
# summarise(Task_RT = mean(Task_RT, na.rm=TRUE), .groups = "drop") %>%
# mutate(PID = factor(PID)) %>%
ggplot(aes(x=!!sym(gb), y = !!sym(indicator))) +
geom_boxplot(aes(color = !!sym(gb), fill = !!sym(gb)),
position="identity", outlier.shape = 8) +
scale_color_lancet()+
scale_fill_lancet(alpha = 0.5)+
stat_pvalue_manual(t_ds_group,
bracket.nudge.y = 0.1,
step.increase = 0.1,
label = plabel, hide.ns = FALSE,
tip.length = 0.01) +
labs(title = indicator, x = gb, y = indicator, fill=gb) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
}
perf_box_plot(df_False_Choice, "Task_RT", "ChoiceDemand")
perf_box_plot(df_False_Choice, "Task_ACC", "ChoiceDemand")
perf_box_plot(df_False_Choice, "Task_A_measure", "ChoiceDemand")
df_False_Choice_remove_outliers <-
df_False_Choice %>%
group_by(PID) %>%
dplyr::filter(abs(scale(ChoiceRT)) <= 2.5) %>%
ungroup()
df_False_Choice_remove_outliers <-
df_False_Choice %>%
group_by(PID) %>%
filter(abs(scale(ChoiceRT)) <= 2.5) %>%
ungroup()
View(df_False_Choice_remove_outliers)
df_False_Choice_remove_outliers %>%
ggboxplot(data=., x="PID", y = "ChoiceRT",
color = "ChoiceDemand",
width = 0.7, dodge = 0) +
scale_color_lancet()+
labs(title = "Trial RT", x = "PID", y = "Trial RT (s)", color = "Task Demand") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
df_False_Choice_remove_outliers %>%
ggboxplot(data=., x="PID", y = "ChoiceRT",
color = "ChoiceDemand",
width = 0.7, dodge = 0) +
scale_color_lancet()+
labs(title = "Choice RT", x = "PID", y = "Choice RT (s)", color = "Choice Demand") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
df_False_Choice_remove_outliers <-
df_False_Choice %>%
group_by(PID) %>%
filter(abs(scale(ChoiceRT)) <= 0.25) %>%
ungroup()
df_False_Choice_remove_outliers %>%
ggboxplot(data=., x="PID", y = "ChoiceRT",
color = "ChoiceDemand",
width = 0.7, dodge = 0) +
scale_color_lancet()+
labs(title = "Choice RT", x = "PID", y = "Choice RT (s)", color = "Choice Demand") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
df_False_Choice_RT_outliers <-
df_False_Choice %>%
group_by(PID) %>%
filter(abs(scale(ChoiceRT)) >= 2.5) %>%
ungroup() %>%
unique(PID)
df_False_Choice_RT_outliers <-
df_False_Choice %>%
group_by(PID) %>%
filter(abs(scale(ChoiceRT)) >= 2.5) %>%
ungroup() %>%
summarise(ChoiceRT=mean(ChoiceRT, na.rm=TRUE), .groups = "drop")
View(df_False_Choice_remove_outliers)
View(df_False_Choice_RT_outliers)
df_False_Choice_RT_outliers <-
df_False_Choice %>%
group_by(PID) %>%
filter(abs(scale(ChoiceRT)) >= 2.5) %>%
# ungroup() %>%
summarise(ChoiceRT=mean(ChoiceRT, na.rm=TRUE), .groups = "drop")
df_False_Choice_RT_outliers <-
df_False_Choice %>%
group_by(PID) %>%
filter(abs(scale(ChoiceRT)) >= 5) %>%
# ungroup() %>%
summarise(ChoiceRT=mean(ChoiceRT, na.rm=TRUE), .groups = "drop")
df_dr_means_de_v2 <-
df_DemandRating %>%
group_by(PID, DemandCheck) %>%
summarise(DR_aves = mean(DemandRating, na.rm=TRUE),
DR_aveZs = mean(DemandRatingZ, na.rm=TRUE),
.groups = "drop")
df_dr_means_de <-
df_DemandRating %>%
group_by(PID, DemandCheck) %>%
summarise(DR_aves = mean(DemandRating, na.rm=TRUE),
DR_aveZs = mean(DemandRatingZ, na.rm=TRUE),
.groups = "drop")
View(df_DemandRating)
View(df_clean)
View(data_all)
data_all['007']
data_all['007']['cueDemandCheck']
data_all['007']['DemandLevel']
df_clean$DemandLevel
df_dr_means_de <-
df_DemandRating %>%
group_by(PID, DemandLevel) %>%
summarise(DR_aves = mean(DemandRating, na.rm=TRUE),
DR_aveZs = mean(DemandRatingZ, na.rm=TRUE),
.groups = "drop")
df_clean$DemandLevel[df_clean$Phase=="DEMANDRATING"]
df_dr_means_de <-
df_DemandRating %>%
group_by(PID, DemandLevel) %>%
summarise(DemandRating = mean(DemandRating, na.rm=TRUE),
DemandRating_z = mean(DemandRating_z, na.rm=TRUE),
.groups = "drop")
t_dr <-
df_dr_means_de %>%
t_test(DemandRating_z ~ DemandLevel, paired = TRUE, detailed = TRUE) %>%
add_xy_position(x = "DemandLevel") %>%
add_significance()
ggplot(data = df_dr_means_de, aes(x = DemandLevel, y = DemandRating_z,
color = DemandLevel)) +
geom_boxplot(width = 0.5, alpha = 0.7) +
geom_jitter() +
stat_boxplot(geom = "errorbar", width = 0.15) +
stat_pvalue_manual(t_dr_v2, y = 105, step.increase = 0.2,
label = "p = {p}{p.adj.signif}", hide.ns = TRUE) +
scale_color_manual(labels=c("1-Back", "2-Back", "3-Back"),
values = c("#00468BFF", "#42B540FF", "#ED0000FF")) +
scale_x_discrete(labels = c("1-Back", "2-Back", "3-Back")) +
labs(title = "Demand Rating t-test", x = "Task Demand", y = "Demand Rating_z",
color = "Demand Level") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df_dr_means_de, aes(x = DemandLevel, y = DemandRating_z,
color = DemandLevel)) +
geom_boxplot(width = 0.5, alpha = 0.7) +
geom_jitter() +
stat_boxplot(geom = "errorbar", width = 0.15) +
stat_pvalue_manual(t_dr, y = 105, step.increase = 0.2,
label = "p = {p}{p.adj.signif}", hide.ns = TRUE) +
scale_color_manual(labels=c("1-Back", "2-Back", "3-Back"),
values = c("#00468BFF", "#42B540FF", "#ED0000FF")) +
scale_x_discrete(labels = c("1-Back", "2-Back", "3-Back")) +
labs(title = "Demand Rating t-test", x = "Task Demand", y = "Demand Rating_z",
color = "Demand Level") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df_dr_means_de, aes(x = DemandLevel, y = DemandRating_z,
color = DemandLevel)) +
geom_boxplot(width = 0.5, alpha = 0.7) +
geom_jitter() +
stat_boxplot(geom = "errorbar", width = 0.15) +
stat_pvalue_manual(t_dr, y = 105, step.increase = 0.2,
label = "p = {p}{p.adj.signif}", hide.ns = TRUE) +
scale_color_manual(labels=c("1-Back", "2-Back", "3-Back"),
values = c("#00468BFF", "#42B540FF", "#ED0000FF")) +
# scale_x_discrete(labels = c("1-Back", "2-Back", "3-Back")) +
labs(title = "Demand Rating t-test", x = "Task Demand", y = "Demand Rating_z",
color = "Demand Level") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df_dr_means_de, aes(x = DemandLevel, y = DemandRating_z,
color = DemandLevel)) +
geom_boxplot(width = 0.5, alpha = 0.7) +
geom_jitter() +
# stat_boxplot(geom = "errorbar", width = 0.15) +
# stat_pvalue_manual(t_dr, y = 105, step.increase = 0.2,
#                    label = "p = {p}{p.adj.signif}", hide.ns = TRUE) +
# scale_color_manual(labels=c("1-Back", "2-Back", "3-Back"),
#                    values = c("#00468BFF", "#42B540FF", "#ED0000FF")) +
# scale_x_discrete(labels = c("1-Back", "2-Back", "3-Back")) +
labs(title = "Demand Rating t-test", x = "Task Demand", y = "Demand Rating_z",
color = "Demand Level") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df_dr_means_de, aes(x = DemandLevel, y = DemandRating_z,
color = DemandLevel)) +
geom_boxplot(width = 0.5, alpha = 0.7) +
geom_jitter() +
stat_boxplot(geom = "errorbar", width = 0.15) +
# stat_pvalue_manual(t_dr, y = 105, step.increase = 0.2,
#                    label = "p = {p}{p.adj.signif}", hide.ns = TRUE) +
# scale_color_manual(labels=c("1-Back", "2-Back", "3-Back"),
#                    values = c("#00468BFF", "#42B540FF", "#ED0000FF")) +
# scale_x_discrete(labels = c("1-Back", "2-Back", "3-Back")) +
labs(title = "Demand Rating t-test", x = "Task Demand", y = "Demand Rating_z",
color = "Demand Level") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
df_dr_means_de <-
df_DemandRating %>%
group_by(PID, DemandLevel) %>%
summarise(DemandRating = mean(DemandRating, na.rm=TRUE),
DemandRating_z = mean(DemandRating_z, na.rm=TRUE),
.groups = "drop") %>%
mutate(DemandLevel=factor(DemandLevel))
t_dr <-
df_dr_means_de %>%
t_test(DemandRating_z ~ DemandLevel, paired = TRUE, detailed = TRUE) %>%
add_xy_position(x = "DemandLevel") %>%
add_significance()
ggplot(data = df_dr_means_de, aes(x = DemandLevel, y = DemandRating_z,
color = DemandLevel)) +
geom_boxplot(width = 0.5, alpha = 0.7) +
geom_jitter() +
stat_boxplot(geom = "errorbar", width = 0.15) +
# stat_pvalue_manual(t_dr, y = 105, step.increase = 0.2,
#                    label = "p = {p}{p.adj.signif}", hide.ns = TRUE) +
# scale_color_manual(labels=c("1-Back", "2-Back", "3-Back"),
#                    values = c("#00468BFF", "#42B540FF", "#ED0000FF")) +
# scale_x_discrete(labels = c("1-Back", "2-Back", "3-Back")) +
labs(title = "Demand Rating t-test", x = "Task Demand", y = "Demand Rating_z",
color = "Demand Level") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df_dr_means_de, aes(x = DemandLevel, y = DemandRating_z,
color = DemandLevel)) +
geom_boxplot(width = 0.5, alpha = 0.7) +
geom_jitter() +
stat_boxplot(geom = "errorbar", width = 0.15) +
stat_pvalue_manual(t_dr, y = 105, step.increase = 0.2,
label = "p = {p}{p.adj.signif}", hide.ns = TRUE) +
scale_color_manual(labels=c("1-Back", "2-Back", "3-Back"),
values = c("#00468BFF", "#42B540FF", "#ED0000FF")) +
scale_x_discrete(labels = c("1-Back", "2-Back", "3-Back")) +
labs(title = "Demand Rating t-test", x = "Task Demand", y = "Demand Rating_z",
color = "Demand Level") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df_dr_means_de, aes(x = DemandLevel, y = DemandRating_z,
color = DemandLevel)) +
geom_boxplot(width = 0.5, alpha = 0.7) +
geom_jitter() +
stat_boxplot(geom = "errorbar", width = 0.15) +
stat_pvalue_manual(t_dr, y = 1, step.increase = 0.2,
label = "p = {p}{p.adj.signif}", hide.ns = TRUE) +
scale_color_manual(labels=c("1-Back", "2-Back", "3-Back"),
values = c("#00468BFF", "#42B540FF", "#ED0000FF")) +
scale_x_discrete(labels = c("1-Back", "2-Back", "3-Back")) +
labs(title = "Demand Rating t-test", x = "Task Demand", y = "Demand Rating_z",
color = "Demand Level") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df_dr_means_de, aes(x = DemandLevel, y = DemandRating_z,
color = DemandLevel)) +
geom_boxplot(width = 0.5, alpha = 0.7) +
geom_jitter() +
stat_boxplot(geom = "errorbar", width = 0.15) +
stat_pvalue_manual(t_dr, step.increase = 0.2, bracket.nudge.y = 0.1,
label = "p = {p}{p.adj.signif}", hide.ns = TRUE) +
scale_color_manual(labels=c("1-Back", "2-Back", "3-Back"),
values = c("#00468BFF", "#42B540FF", "#ED0000FF")) +
scale_x_discrete(labels = c("1-Back", "2-Back", "3-Back")) +
labs(title = "Demand Rating t-test", x = "Task Demand", y = "Demand Rating_z",
color = "Demand Level") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
df_dr_means_de_diff <-
df_dr_means_de %>%
select(-DR_aves) %>%
pivot_wider(names_from = DemandLevel,
names_prefix = "DemandRating_z_" ,values_from = DemandRating_z) %>%
group_by(PID) %>%
mutate(DemandRating_z_diff = DemandRating_z_3 -DemandRating_z_1) %>%
ungroup() %>%
mutate(DemandCheckType = ifelse(DemandRating_z_diff > 0, "3_as_harder", "1_as_harder"))
df_dr_means_de_diff <-
df_dr_means_de %>%
select(-DemandRating) %>%
pivot_wider(names_from = DemandLevel,
names_prefix = "DemandRating_z_" ,values_from = DemandRating_z) %>%
group_by(PID) %>%
mutate(DemandRating_z_diff = DemandRating_z_3 -DemandRating_z_1) %>%
ungroup() %>%
mutate(DemandCheckType = ifelse(DemandRating_z_diff > 0, "3_as_harder", "1_as_harder"))
# ggplot(data = df_dr_means_de_diff, aes(x="", y = DR_aveZs_diff, color=DemandCheckType, label=PID)) +
ggplot(data = df_dr_means_de_diff, aes(x="", y = DemandRating_z_diff, color=DemandLevel)) +
geom_boxplot(position="identity", width = 0.2, alpha = 0.9) +
geom_jitter(width = 0.2) +
# geom_label_repel(aes(color=DemandCheckType), max.overlaps = nrow(df_dr_means_de_diff)) +
scale_color_d3()+
labs(title = "DemandRating_diff (hard-easy)", x = "", y = "DemandRating_Z_diff") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
df_dr_means_de_diff <-
df_dr_means_de %>%
select(-DemandRating) %>%
pivot_wider(names_from = DemandLevel,
names_prefix = "DemandRating_z_" ,values_from = DemandRating_z) %>%
group_by(PID) %>%
mutate(DemandRating_z_diff = DemandRating_z_3 -DemandRating_z_1) %>%
ungroup() %>%
mutate(DemandCheckType = ifelse(DemandRating_z_diff > 0, "3_as_harder", "1_as_harder"))
# ggplot(data = df_dr_means_de_diff, aes(x="", y = DR_aveZs_diff, color=DemandCheckType, label=PID)) +
ggplot(data = df_dr_means_de_diff, aes(x="", y = DemandRating_z_diff, color=DemandCheckType)) +
geom_boxplot(position="identity", width = 0.2, alpha = 0.9) +
geom_jitter(width = 0.2) +
# geom_label_repel(aes(color=DemandCheckType), max.overlaps = nrow(df_dr_means_de_diff)) +
scale_color_d3()+
labs(title = "DemandRating_diff (hard-easy)", x = "", y = "DemandRating_Z_diff") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
df_dr_means_de_diff <-
df_dr_means_de %>%
select(-DemandRating) %>%
pivot_wider(names_from = DemandLevel,
names_prefix = "DemandRating_z_" ,values_from = DemandRating_z) %>%
group_by(PID) %>%
mutate(DemandRating_z_diff = DemandRating_z_3 -DemandRating_z_1) %>%
ungroup() %>%
mutate(DemandCheckType = ifelse(DemandRating_z_diff > 0, "3_as_harder", "1_as_harder"))
# ggplot(data = df_dr_means_de_diff, aes(x="", y = DR_aveZs_diff, color=DemandCheckType, label=PID)) +
ggplot(data = df_dr_means_de_diff, aes(x="", y = DemandRating_z_diff, color=DemandCheckType)) +
geom_boxplot(position="identity", width = 0.2, alpha = 0.9) +
geom_jitter(width = 0.2) +
geom_label_repel(aes(color=DemandCheckType), max.overlaps = nrow(df_dr_means_de_diff)) +
scale_color_d3()+
labs(title = "DemandRating_diff (hard-easy)", x = "", y = "DemandRating_Z_diff") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
df_dr_means_de_diff <-
df_dr_means_de %>%
select(-DemandRating) %>%
pivot_wider(names_from = DemandLevel,
names_prefix = "DemandRating_z_" ,values_from = DemandRating_z) %>%
group_by(PID) %>%
mutate(DemandRating_z_diff = DemandRating_z_3 -DemandRating_z_1) %>%
ungroup() %>%
mutate(DemandCheckType = ifelse(DemandRating_z_diff > 0, "3_as_harder", "1_as_harder"))
ggplot(data = df_dr_means_de_diff, aes(x="", y = DR_aveZs_diff, color=DemandCheckType, label=PID)) +
# ggplot(data = df_dr_means_de_diff, aes(x="", y = DemandRating_z_diff, color=DemandCheckType)) +
geom_boxplot(position="identity", width = 0.2, alpha = 0.9) +
geom_jitter(width = 0.2) +
geom_label_repel(aes(color=DemandCheckType), max.overlaps = nrow(df_dr_means_de_diff)) +
scale_color_d3()+
labs(title = "DemandRating_diff (hard-easy)", x = "", y = "DemandRating_Z_diff") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
df_dr_means_de_diff <-
df_dr_means_de %>%
select(-DemandRating) %>%
pivot_wider(names_from = DemandLevel,
names_prefix = "DemandRating_z_" ,values_from = DemandRating_z) %>%
group_by(PID) %>%
mutate(DemandRating_z_diff = DemandRating_z_3 -DemandRating_z_1) %>%
ungroup() %>%
mutate(DemandCheckType = ifelse(DemandRating_z_diff > 0, "3_as_harder", "1_as_harder"))
ggplot(data = df_dr_means_de_diff, aes(x="", y = DemandRating_z_diff, color=DemandCheckType, label=PID)) +
# ggplot(data = df_dr_means_de_diff, aes(x="", y = DemandRating_z_diff, color=DemandCheckType)) +
geom_boxplot(position="identity", width = 0.2, alpha = 0.9) +
geom_jitter(width = 0.2) +
geom_label_repel(aes(color=DemandCheckType), max.overlaps = nrow(df_dr_means_de_diff)) +
scale_color_d3()+
labs(title = "DemandRating_diff (hard-easy)", x = "", y = "DemandRating_Z_diff") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
